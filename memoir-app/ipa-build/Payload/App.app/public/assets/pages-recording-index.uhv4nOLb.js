import{A as e,q as o,n as t,c as i,w as s,g as n,r,y as a,x as c,H as l,v as d,J as h,u,K as g,D as p,L as m,i as w,o as f,a as b,e as R,d as y,t as k,k as S,F as T,l as v,B as A,G as C,m as P,b as x}from"./index-DQU_JAH0.js";import{a as M}from"./apiConfig.BpiTqs15.js";import{_ as W,a as I,b as _,c as E}from"./check.CZEXAOrB.js";import{_ as D}from"./_plugin-vue_export-helper.BCo6x5W8.js";function B(i){var s;if(401===i.statusCode){const n=null==(s=i.data)?void 0:s.code;if("AUTH_FAILED"===n||"NO_TOKEN"===n||"USER_NOT_FOUND"===n)return e("token"),e("user"),e("customCharacterName"),o({title:"登录已过期，请重新登录",icon:"none",duration:2e3}),setTimeout(()=>{t({url:"/pages/login/index"})},2e3),!0}return!1}const N=D({data:()=>({chapterId:"",chapterTitle:"",contentText:"",isRecording:!1,isProcessing:!1,recordingTime:0,recordings:[],recordingTimer:null,realtimeRecognitionTimer:null,statusMonitorTimer:null,speechRecognition:null,lastRecognizedFile:null,prompts:[],mediaRecorder:null,mediaStream:null,audioChunks:[],audioQueue:[],audioProcessingPromise:Promise.resolve(),pcmSampleRate:16e3,useAudioProcessorStreaming:!1,allowAudioStreaming:!1,websocket:null,audioProcessor:null,audioContext:null,audioSourceNode:null,websocketKeepAliveTimer:null,decodeAudioContext:null,currentToken:null,currentApiKey:null,speechProvider:"aliyun",currentSpeechConfig:null,baiduAppId:null,baiduApiKey:null,baiduDevPid:15372,baiduCuid:null,aliyunAppKey:null,aliyunRegion:null,aliyunWsUrl:null,aliyunTaskId:null,lastPartialText:"",isAiCompleting:!1,showAiDiff:!1,originalText:"",aiCompletedText:""}),computed:{recordButtonText(){return this.isProcessing?"处理中...":this.isRecording?"结束录制":"点击录制"},currentDate(){const e=new Date;return`${e.getFullYear()}年${e.getMonth()+1}月${e.getDate()}日`}},onLoad(e){this.chapterId=e.chapterId||"",this.chapterTitle=decodeURIComponent(e.title||"章节录制"),this.loadChapterPrompts(),this.loadSavedContent()},onUnload(){this.recordingTimer&&clearInterval(this.recordingTimer),this.realtimeRecognitionTimer&&clearInterval(this.realtimeRecognitionTimer),this.statusMonitorTimer&&clearInterval(this.statusMonitorTimer),this.speechRecognition&&this.speechRecognition.stop(),this.stopStatusMonitoring()},mounted(){this.loadChapterData(),this.checkRecordingSupport()},methods:{checkRecordingSupport(){var e;console.log("=== 录音支持检查 ==="),console.log("navigator存在:","undefined"!=typeof navigator),console.log("mediaDevices存在:",void 0!==(null==navigator?void 0:navigator.mediaDevices)),console.log("getUserMedia存在:",void 0!==(null==(e=null==navigator?void 0:navigator.mediaDevices)?void 0:e.getUserMedia)),console.log("MediaRecorder存在:","undefined"!=typeof MediaRecorder),"undefined"!=typeof MediaRecorder&&(console.log("支持的MIME类型:"),console.log("audio/webm:",MediaRecorder.isTypeSupported("audio/webm")),console.log("audio/webm;codecs=opus:",MediaRecorder.isTypeSupported("audio/webm;codecs=opus")),console.log("audio/mp4:",MediaRecorder.isTypeSupported("audio/mp4"))),console.log("uni存在:","undefined"!=typeof uni),console.log("uni.startRecord存在:",void 0!==(null==uni?void 0:uni.startRecord)),console.log("==================")},loadChapterData(){const e=m();if(e.length>0){const o=e[e.length-1].options||{};this.chapterId=o.chapterId||"",this.chapterTitle=o.title||"",console.log("加载章节数据:",this.chapterId,this.chapterTitle),this.loadChapterPrompts(),this.loadSavedContent()}},goBack(){this.saveChapter(),p()},onTextInput(e){this.contentText=e.detail.value||e.target.value||"",this.lastPartialText=""},loadChapterPrompts(){this.prompts={background:["您出生在哪里？那是一个什么样的地方？","您的父母是做什么工作的？","家里有哪些亲人？他们各自有什么特点？"],childhood:["您最难忘的童年记忆是什么？","小时候最喜欢玩什么游戏？","有没有特别要好的童年伙伴？"],education:["您的求学经历是怎样的？","有没有对您影响深刻的老师？","学生时代最难忘的经历是什么？"],career:["您的第一份工作是什么？","职业生涯中最大的成就是什么？","工作中遇到过什么挑战？"],love:["您是如何遇到另一半的？","印象最深刻的约会经历是什么？","婚礼是什么样的？"],family:["成为父母后的感受如何？","孩子给您带来了什么变化？","家庭生活中最温馨的时刻是什么？"],travel:["您去过哪些地方旅行？","最难忘的旅行经历是什么？","旅行中遇到过什么有趣的人或事？"],relationships:["您生命中最重要的朋友是谁？","有没有改变您人生轨迹的重要遇见？","您如何维系长久的友谊？"],laterlife:["退休后的生活是什么样的？","晚年最大的快乐来源是什么？","对于衰老您有什么感受？"],wisdom:["人生中最重要的感悟是什么？","如果重新来过，您会做出不同的选择吗？","您希望给年轻人什么建议？"]}[this.chapterId]||[]},loadSavedContent(){try{const e=n("user"),o=null==e?void 0:e.id;if(!o)return;const t=n(`chapter_${this.chapterId}_${o}`);if(t){const e=JSON.parse(t);this.contentText=e.text||"",this.recordings=e.recordings||[]}}catch(e){console.log("加载保存内容失败:",e)}},async saveChapter(){var e;try{const t=n("token");if(!t)return void o({title:"请先登录",icon:"error"});d({title:"保存中..."});const i={chapterId:this.chapterId,title:this.chapterTitle,content:this.contentText,recordings:this.recordings},s=await r({url:M("/chapters/save"),method:"POST",header:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},data:i});if(c(),B(s))return;if(200!==s.statusCode||!s.data.success)throw new Error((null==(e=s.data)?void 0:e.message)||"保存失败");{const e=n("user"),t=null==e?void 0:e.id;if(t){const e={text:this.contentText,recordings:this.recordings,lastModified:(new Date).toISOString(),completed:this.contentText.length>0||this.recordings.length>0};u(`chapter_${this.chapterId}_${t}`,JSON.stringify(e));const o=n(`chapter_status_${t}`)||"{}",i=JSON.parse(o);i[this.chapterId]={completed:e.completed,lastModified:e.lastModified},u(`chapter_status_${t}`,JSON.stringify(i))}o({title:"保存成功",icon:"success"}),setTimeout(()=>{p()},1500)}}catch(t){if(c(),console.error("保存章节失败:",t),t.errMsg&&t.errMsg.includes("network"))try{const e=n("user"),t=null==e?void 0:e.id;if(t){const e={text:this.contentText,recordings:this.recordings,lastModified:(new Date).toISOString(),completed:this.contentText.length>0||this.recordings.length>0,needSync:!0};u(`chapter_${this.chapterId}_${t}`,JSON.stringify(e)),o({title:"已离线保存",icon:"success"}),setTimeout(()=>{p()},1500)}}catch(i){o({title:"保存失败",icon:"error"})}else o({title:t.message||"保存失败",icon:"error"})}},toggleRecording(){console.log("🎯 点击录制按钮，当前状态:",this.isRecording),console.log("🎯 处理状态:",this.isProcessing),console.log("🎯 按钮文字:",this.recordButtonText),this.isRecording?(console.log("🛑 停止录音"),this.stopRecording()):(console.log("🎤 开始录音"),this.startRecording())},checkRecordingPermission:async()=>new Promise((e,o)=>{window.Capacitor?window.Capacitor.Plugins.Permissions?window.Capacitor.Plugins.Permissions.check({name:"microphone"}).then(t=>{"granted"===t.state?e():window.Capacitor.Plugins.Permissions.request({name:"microphone"}).then(t=>{"granted"===t.state?e():o(new Error("录音权限被拒绝"))}).catch(o)}).catch(o):e():navigator.mediaDevices&&navigator.mediaDevices.getUserMedia?navigator.mediaDevices.getUserMedia({audio:!0}).then(o=>{o.getTracks().forEach(e=>e.stop()),e()}).catch(o):o(new Error("当前环境不支持录音"))}),startStatusMonitoring(){console.log("🔍 开始监控MediaRecorder状态..."),this.statusMonitorTimer=setInterval(()=>{if(this.mediaRecorder&&(console.log("📊 MediaRecorder状态:",this.mediaRecorder.state),console.log("📊 录音状态:",this.isRecording),console.log("📊 处理状态:",this.isProcessing),"inactive"===this.mediaRecorder.state&&this.isRecording)){console.warn("⚠️ MediaRecorder意外停止，尝试重新启动...");try{this.mediaRecorder.start(),console.log("✅ MediaRecorder重新启动成功")}catch(e){console.error("❌ MediaRecorder重新启动失败:",e),this.handleRecordingError("录音意外停止")}}},2e3)},stopStatusMonitoring(){this.statusMonitorTimer&&(clearInterval(this.statusMonitorTimer),this.statusMonitorTimer=null,console.log("🔍 停止状态监控"))},async startRecording(e){var t;if(console.log("🚀 startRecording 被调用"),console.log("🚀 当前 isProcessing:",this.isProcessing),console.log("🚀 当前 isRecording:",this.isRecording),this.isProcessing)console.log("⚠️ 正在处理中，跳过录音");else{e&&(e.preventDefault(),e.stopPropagation());try{console.log("🔐 开始检查录音权限..."),await this.checkRecordingPermission(),console.log("✅ 录音权限检查通过")}catch(i){return console.error("❌ 录音权限检查失败:",i),void o({title:"需要录音权限才能使用此功能",icon:"error"})}console.log("📝 设置录音状态为 true"),this.isRecording=!0,this.recordingTime=0,console.log("📝 录音状态已设置:",this.isRecording),this.allowAudioStreaming=!0,this.lastPartialText="",this.audioQueue=[],this.audioProcessingPromise=Promise.resolve(),this.recordingTimer=setInterval(()=>{this.recordingTime++},1e3),console.log("🎤 开始录音..."),console.log("运行环境:",g().platform),console.log("🔍 检查录音环境支持..."),console.log("🔍 navigator存在:","undefined"!=typeof navigator),console.log("🔍 mediaDevices存在:",void 0!==(null==navigator?void 0:navigator.mediaDevices)),console.log("🔍 getUserMedia存在:",void 0!==(null==(t=null==navigator?void 0:navigator.mediaDevices)?void 0:t.getUserMedia)),console.log("🔍 uni.startRecord存在:","function"==typeof(null==uni?void 0:uni.startRecord));try{console.log("🌐 使用阿里云语音实时识别..."),await this.startAliyunWebRecording()}catch(i){return console.error("❌ 阿里云实时识别启动失败:",i),void this.handleRecordingError(i.message||"语音识别启动失败")}console.log("📱 显示开始录制提示"),o({title:"开始录制",icon:"none"}),console.log("📊 录音状态检查 - isRecording:",this.isRecording),console.log("📊 按钮文字检查 - recordButtonText:",this.recordButtonText)}},async startAliyunWebRecording(){try{console.log("🌐 开始阿里云Web实时语音识别..."),console.log("🔐 检查Web录音权限...");if(!(await this.checkWebRecordingPermission()))throw new Error("录音权限被拒绝");console.log("🔑 获取阿里云语音识别配置...");const e=await this.getAliyunSpeechConfig();console.log("✅ 语音识别配置已获取 (阿里云)"),this.speechProvider="aliyun",this.currentSpeechConfig=e,await this.startWebRecording(e),console.log("✅ 阿里云Web实时语音识别已开始")}catch(e){throw console.error("❌ 阿里云Web实时语音识别启动失败:",e),e}},async getAliyunSpeechConfig(){try{let e=n("token");if(!e&&(console.log("🔐 用户未登录，尝试自动登录..."),await this.autoLogin(),e=n("token"),!e))throw new Error("用户未登录，无法进行语音识别");const o=await r({url:M("/aliyun-speech/token"),method:"GET",header:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"}});if(o.data.success){const e=o.data.data||{},t=e.token,i=e.appKey,s=e.region||e.regionId||"cn-shanghai",n=e.websocketUrl||`wss://nls-gateway-${s}.aliyuncs.com/ws/v1`,r=e.sampleRate||this.pcmSampleRate||16e3;return this.currentToken=t,this.currentApiKey=i,this.aliyunAppKey=i,this.aliyunRegion=s,this.aliyunWsUrl=n,this.pcmSampleRate=r,console.log("✅ 获取阿里云语音识别配置成功:",{region:s,websocketUrl:n,sampleRate:r}),{provider:"aliyun",token:t,appKey:i,websocketUrl:n,region:s,sampleRate:r}}throw new Error("获取语音识别Token失败: "+o.data.message)}catch(e){throw console.error("❌ 获取阿里云语音识别配置失败:",e),e}},async startBaiduWebRecording(){try{console.log("🌐 开始百度Web实时语音识别..."),console.log("🔐 检查Web录音权限...");if(!(await this.checkWebRecordingPermission()))throw new Error("录音权限被拒绝");console.log("🔑 获取百度语音识别配置...");const e=await this.getBaiduSpeechConfig();console.log("✅ 语音识别配置已获取"),await this.startWebRecording(e),console.log("✅ 百度Web实时语音识别已开始")}catch(e){throw console.error("❌ 百度Web实时语音识别启动失败:",e),e}},async startBaiduMobileRecording(){console.log("🎯 移动端环境使用Web录音方案进行识别 (阿里云)"),await this.startAliyunWebRecording()},isCapacitorEnvironment:()=>!(!window.Capacitor||!window.Capacitor.isNativePlatform()),async autoLogin(){try{console.log("🔐 开始自动登录...");const e=await r({url:M("/auth/login"),method:"POST",header:{"Content-Type":"application/json"},data:{identifier:"demo",password:"demo123"}});if(e.data.success){const{token:o,user:t}=e.data.data;return u("token",o),u("user",t),console.log("✅ 自动登录成功"),!0}return console.error("❌ 自动登录失败:",e.data.message),!1}catch(e){return console.error("❌ 自动登录异常:",e),!1}},async getBaiduSpeechConfig(){try{let e=n("token");if(!e&&(console.log("🔐 用户未登录，尝试自动登录..."),await this.autoLogin(),e=n("token"),!e))throw new Error("用户未登录，无法进行语音识别");const o=await r({url:M("/speech/token"),method:"GET",header:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"}});if(o.data.success){const e=o.data.data||{},t=e.token,i=e.appId,s=e.apiKey,n=e.devPid||15372,r=e.sampleRate||this.pcmSampleRate,a=e.cuid||this.generateSessionId();return this.currentToken=t,this.currentApiKey=s,this.baiduAppId=i,this.baiduApiKey=s,this.baiduDevPid=n,this.pcmSampleRate=r,this.baiduCuid=a,console.log("✅ 获取百度语音识别配置成功:",{appId:i,devPid:n,sampleRate:r,cuid:a}),{token:t,appId:i,apiKey:s,devPid:n,sampleRate:r,cuid:a}}throw new Error("获取语音识别Token失败: "+o.data.message)}catch(e){throw console.error("❌ 获取百度语音识别配置失败:",e),e}},async checkWebRecordingPermission(){try{if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){return(await navigator.mediaDevices.getUserMedia({audio:!0})).getTracks().forEach(e=>e.stop()),!0}throw new Error("Web录音API不可用")}catch(e){return console.error("❌ 检查Web录音权限失败:",e),!1}},checkBaiduPermission:async()=>(console.log("🔐 默认授予录音权限（移动端插件未启用）"),{granted:!0,denied:!1,neverAsked:!1}),initializeBaiduSDK:async(e,o)=>(console.log("🔧 百度移动端SDK未启用，跳过初始化"),!0),async startBaiduRecording(){console.log("🎤 使用Web录音替代原生插件 (阿里云)"),await this.startAliyunWebRecording()},setupBaiduListeners(){console.log("ℹ️ 移动端监听器未启用")},async startCapacitorRecording(){try{if(console.log("📱 开始Capacitor录音..."),console.log("🔍 检查录音插件..."),console.log("🔍 window.Capacitor.Plugins.VoiceRecorder:",!!window.Capacitor.Plugins.VoiceRecorder),console.log("🔍 window.Capacitor.Plugins.Microphone:",!!window.Capacitor.Plugins.Microphone),console.log("🔍 window.Media:",!!window.Media),console.log("🔍 window.cordova:",!!window.cordova),console.log("🔍 window.device:",!!window.device),window.Capacitor.Plugins.VoiceRecorder){console.log("🎤 使用VoiceRecorder插件...");const e=await window.Capacitor.Plugins.VoiceRecorder.startRecording();console.log("✅ VoiceRecorder录音开始成功:",e)}else if(window.Capacitor.Plugins.Microphone){console.log("🎤 使用Microphone插件...");const e=await window.Capacitor.Plugins.Microphone.startRecording();console.log("✅ Microphone录音开始成功:",e)}else{if(!window.Media)throw console.log("❌ 没有找到任何录音插件！"),new Error("没有找到可用的录音插件，无法进行真实录音");console.log("🎤 使用Cordova Media插件..."),await this.startCordovaRecording()}}catch(e){throw console.error("❌ Capacitor录音开始失败:",e),new Error("录音功能不可用: "+e.message)}},async startCordovaRecording(){try{console.log("🎤 开始Cordova录音...");Date.now();const e=`recording_${Date.now()}.wav`;console.log("📁 录音文件路径:",e),this.mediaRecorder=new Media(e,()=>{console.log("✅ Cordova录音开始成功")},e=>{console.error("❌ Cordova录音开始失败:",e),this.handleRecordingError("录音开始失败")}),console.log("🎤 调用 startRecord()..."),this.mediaRecorder.startRecord(),console.log("✅ Cordova录音已启动"),setTimeout(()=>{this.mediaRecorder&&console.log("🔍 录音状态检查:",{mediaRecorder:!!this.mediaRecorder,isRecording:this.isRecording,filePath:e})},1e3),this.startStatusMonitoring(),this.startRealtimeRecognition()}catch(e){throw console.error("❌ Cordova录音启动失败:",e),e}},async startSimulatedRecording(){try{console.log("🎭 开始模拟录音模式..."),this.isRecording=!0,this.recordingTime=0,this.recordingTimer=setInterval(()=>{this.recordingTime++},1e3),this.startStatusMonitoring(),o({title:"录音模式已启动，请手动输入文字",icon:"none",duration:3e3}),console.log("✅ 模拟录音模式启动成功")}catch(e){console.error("❌ 模拟录音模式启动失败:",e),this.handleRecordingFallback()}},async startWebRecordingInCapacitor(){try{console.log("🌐 在Capacitor环境中使用Web录音...");const e=await navigator.mediaDevices.getUserMedia({audio:{echoCancellation:!0,noiseSuppression:!0,sampleRate:16e3,channelCount:1,autoGainControl:!0,latency:.01}});this.mediaStream=e;let t="audio/webm;codecs=opus";MediaRecorder.isTypeSupported(t)||(t="audio/webm",MediaRecorder.isTypeSupported(t)||(t="audio/mp4",MediaRecorder.isTypeSupported(t)||(t=""))),console.log("使用MIME类型:",t),this.mediaRecorder=new MediaRecorder(e,t?{mimeType:t}:{}),this.audioChunks=[],this.mediaRecorder.ondataavailable=e=>{console.log("收到音频数据:",e.data.size,"bytes"),e.data.size>0&&(this.audioChunks.push(e.data),this.processRealtimeAudio(e.data))},this.mediaRecorder.onstart=()=>{console.log("🎤 MediaRecorder 已开始录音")},this.mediaRecorder.onstop=()=>{console.log("✅ Web录音停止，数据块数量:",this.audioChunks.length),console.log("录音时长:",this.recordingTime,"秒"),this.isProcessing=!1,this.recordingTime=0,o({title:"录制完成",icon:"success"})},this.mediaRecorder.onerror=e=>{console.error("❌ MediaRecorder错误:",e.error),console.error("错误详情:",e),this.handleRecordingError("录音过程中出错")},this.mediaRecorder.start(),console.log("✅ Web录音开始成功 (Capacitor模式), 状态:",this.mediaRecorder.state),this.startStatusMonitoring(),this.startRealtimeRecognition()}catch(e){console.error("❌ Capacitor Web录音开始失败:",e);let t="无法访问麦克风";"NotAllowedError"===e.name?t="麦克风权限被拒绝，请在设置中允许录音权限":"NotFoundError"===e.name?t="未找到麦克风设备":"NotReadableError"===e.name&&(t="麦克风被其他应用占用"),o({title:t,icon:"error"}),this.handleRecordingFallback()}},async startWebRecording(e){try{console.log("🌐 开始Web录音...");const i=(null==e?void 0:e.provider)||this.speechProvider||"aliyun";this.speechProvider=i,(null==e?void 0:e.sampleRate)&&(this.pcmSampleRate=e.sampleRate),this.currentSpeechConfig=e;const s=await navigator.mediaDevices.getUserMedia({audio:{echoCancellation:!0,noiseSuppression:!0,sampleRate:(null==e?void 0:e.sampleRate)||this.pcmSampleRate,channelCount:1}});this.mediaStream=s,await this.setupAudioProcessing(s);let n="audio/webm;codecs=opus";MediaRecorder.isTypeSupported(n)||(n="audio/webm",MediaRecorder.isTypeSupported(n)||(n="audio/mp4",MediaRecorder.isTypeSupported(n)||(n=""))),console.log("使用MIME类型:",n),this.mediaRecorder=new MediaRecorder(s,n?{mimeType:n}:{}),this.audioChunks=[],this.mediaRecorder.ondataavailable=e=>{console.log("收到音频数据:",e.data.size,"bytes"),e.data.size>0&&(this.audioChunks.push(e.data),this.useAudioProcessorStreaming||this.processRealtimeAudio(e.data))},this.mediaRecorder.onstart=()=>{console.log("🎤 MediaRecorder 已开始录音"),this.currentSpeechConfig=e,"aliyun"===this.speechProvider?this.startAliyunWebSocketRecognition(e):(this.startBaiduWebSocketRecognition(e),this.keepWebSocketAlive())},this.mediaRecorder.onpause=()=>{console.log("⏸️ MediaRecorder 已暂停")},this.mediaRecorder.onresume=()=>{console.log("▶️ MediaRecorder 已恢复")},this.mediaRecorder.onstop=()=>{console.log("✅ Web录音停止，数据块数量:",this.audioChunks.length),console.log("录音时长:",this.recordingTime,"秒"),this.isProcessing=!1,this.recordingTime=0,o({title:"录制完成",icon:"success"})},this.mediaRecorder.onerror=e=>{console.error("❌ MediaRecorder错误:",e.error),console.error("错误详情:",e),this.handleRecordingError("录音过程中出错")};try{window.Capacitor?(this.mediaRecorder.start(),console.log("✅ Web录音开始成功 (Capacitor模式), 状态:",this.mediaRecorder.state)):(this.mediaRecorder.start(100),console.log("✅ Web录音开始成功 (浏览器模式), 状态:",this.mediaRecorder.state))}catch(t){console.error("❌ MediaRecorder.start() 失败:",t),this.mediaRecorder.start(),console.log("✅ Web录音开始成功 (降级模式), 状态:",this.mediaRecorder.state)}this.startStatusMonitoring()}catch(i){console.error("❌ Web录音开始失败:",i);let e="无法访问麦克风";"NotAllowedError"===i.name?e="麦克风权限被拒绝，请在设置中允许录音权限":"NotFoundError"===i.name?e="未找到麦克风设备":"NotReadableError"===i.name&&(e="麦克风被其他应用占用"),o({title:e,icon:"error"}),this.handleRecordingFallback()}},async startRealtimeRecognition(){try{if(console.log("🎤 开始实时语音识别..."),this.websocket&&this.websocket.readyState===WebSocket.OPEN)return void console.log("📡 WebSocket已连接，跳过重复启动");let e;e=this.currentToken&&this.baiduApiKey?{token:this.currentToken,appId:this.baiduAppId,apiKey:this.baiduApiKey,devPid:this.baiduDevPid,sampleRate:this.pcmSampleRate,cuid:this.baiduCuid||this.generateSessionId()}:await this.getBaiduSpeechConfig(),await this.startBaiduWebSocketRecognition(e)}catch(e){console.error("❌ 启动实时语音识别失败:",e)}},async setupAudioProcessing(e){try{const t=window.AudioContext||window.webkitAudioContext;if(!t)return console.warn("⚠️ AudioContext不可用，继续使用MediaRecorder回退"),void(this.useAudioProcessorStreaming=!1);if(this.audioContext&&"closed"!==this.audioContext.state||(this.audioContext=new t({sampleRate:this.pcmSampleRate})),"suspended"===this.audioContext.state&&"function"==typeof this.audioContext.resume&&await this.audioContext.resume(),this.audioSourceNode){try{this.audioSourceNode.disconnect()}catch(o){console.warn("⚠️ 断开旧音频源失败:",o)}this.audioSourceNode=null}if(this.audioProcessor){try{this.audioProcessor.disconnect()}catch(o){console.warn("⚠️ 断开旧音频处理器失败:",o)}this.audioProcessor=null}const i=this.audioContext.createMediaStreamSource(e),s=this.audioContext.createScriptProcessor(4096,1,1),n=this.audioContext.sampleRate,r=this.pcmSampleRate;s.onaudioprocess=e=>{if(!this.allowAudioStreaming||!this.isRecording)return;const t=e.inputBuffer;if(!t)return;const i=t.getChannelData(0);if(!i||!i.length)return;const s=t.sampleRate||n;let a=i;if(s!==r&&(a=this.downsampleBuffer(i,s,r)),!a||!a.length)return;const c=this.float32ToPCM(a);if(c&&c.byteLength&&this.websocket&&this.websocket.readyState===WebSocket.OPEN)try{this.websocket.send(c)}catch(o){console.error("❌ 通过音频处理器发送音频失败:",o)}},i.connect(s),s.connect(this.audioContext.destination),this.audioSourceNode=i,this.audioProcessor=s,this.useAudioProcessorStreaming=!0,console.log("✅ 音频处理器初始化完成，采样率:",n,"→",r)}catch(o){console.error("❌ 初始化音频处理器失败:",o),this.useAudioProcessorStreaming=!1}},isWebSpeechSupported:()=>"webkitSpeechRecognition"in window||"SpeechRecognition"in window,async testRecording(){try{if(console.log("🧪 开始测试录音功能..."),window.Media){console.log("✅ Cordova Media插件可用");const e=new Media("test_recording.wav",()=>{console.log("✅ 测试录音成功")},e=>{console.error("❌ 测试录音失败:",e)});e.startRecord(),console.log("🎤 测试录音已开始"),setTimeout(()=>{e.stopRecord(),console.log("🛑 测试录音已停止")},3e3)}else console.error("❌ Cordova Media插件不可用")}catch(e){console.error("❌ 测试录音失败:",e)}},startWebSpeechRecognition(){const e=window.SpeechRecognition||window.webkitSpeechRecognition;this.speechRecognition=new e,this.speechRecognition.continuous=!0,this.speechRecognition.interimResults=!0,this.speechRecognition.lang="zh-CN",this.speechRecognition.onresult=e=>{let o="",t="";for(let i=e.resultIndex;i<e.results.length;i++){const s=e.results[i][0].transcript;e.results[i].isFinal?t+=s:o+=s}if(t&&(console.log("🎯 最终识别结果:",t),this.contentText?this.contentText+=" "+t:this.contentText=t,this.$forceUpdate()),o){console.log("🎯 中间识别结果:",o);const e=this.contentText+" "+o;this.contentText=e,this.$forceUpdate()}},this.speechRecognition.onerror=e=>{console.error("❌ Web Speech API错误:",e.error)},this.speechRecognition.onend=()=>{console.log("Web Speech API识别结束")},this.speechRecognition.start(),console.log("✅ Web Speech API开始识别")},async startAliyunWebSocketRecognition(e={}){try{const{token:t,appKey:i,websocketUrl:s,sampleRate:n=this.pcmSampleRate||16e3,region:r}=e;if(!t||!i||!s)throw new Error("阿里云语音识别配置不完整");console.log("🎤 开始阿里云WebSocket实时识别..."),console.log("🔑 Token前缀:",t.substring(0,12)+"..."),console.log("🆔 AppKey:",i),console.log("🌏 Region:",r||"默认"),this.currentToken=t,this.currentApiKey=i,this.aliyunAppKey=i,this.aliyunRegion=r||this.aliyunRegion,this.pcmSampleRate=n,this.currentSpeechConfig={...e,provider:"aliyun",sampleRate:n},this.audioQueue=[],this.audioProcessingPromise=Promise.resolve(),this.allowAudioStreaming=!0;let a=s;if(a=a.includes("?")?`${a}&token=${encodeURIComponent(t)}`:`${a}?token=${encodeURIComponent(t)}`,console.log("🌐 WebSocket URL:",a),this.websocket)try{this.websocket.close()}catch(o){console.warn("⚠️ 关闭旧的WebSocket失败:",o)}this.websocket=new WebSocket(a),this.websocket.binaryType="arraybuffer";const c=this.generateMessageId();this.aliyunTaskId=c,this.websocket.onopen=()=>{console.log("✅ 阿里云WebSocket连接已建立");const e={header:{message_id:this.generateMessageId(),task_id:c,namespace:"SpeechTranscriber",name:"StartTranscription",appkey:i},payload:{format:"pcm",sample_rate:Number(n)||16e3,enable_intermediate_result:!0,enable_punctuation_prediction:!0,enable_inverse_text_normalization:!0,disfluency:!0,max_sentence_silence:800}};try{this.websocket.send(JSON.stringify(e)),console.log("📤 已发送阿里云StartTranscription指令")}catch(o){console.error("❌ 发送Start指令失败:",o)}},this.websocket.onmessage=e=>{this.handleAliyunWebSocketMessage(e)},this.websocket.onclose=e=>{console.log("🔌 阿里云WebSocket连接已关闭:",e.code,e.reason),this.allowAudioStreaming=!1},this.websocket.onerror=e=>{console.error("❌ 阿里云WebSocket连接错误:",e),this.allowAudioStreaming=!1}}catch(t){throw console.error("❌ 启动阿里云WebSocket识别失败:",t),this.allowAudioStreaming=!1,t}},async startBaiduWebSocketRecognition(e={}){try{const{token:t,appId:i,apiKey:s,devPid:n=this.baiduDevPid,sampleRate:r=this.pcmSampleRate,cuid:a=this.generateSessionId()}=e;if(!t||!s||!i)throw new Error("百度语音识别配置不完整");console.log("🎤 开始百度WebSocket实时识别..."),console.log("🔑 Token前缀:",t.substring(0,12)+"..."),console.log("🆔 AppID:",i),console.log("🧠 模型 dev_pid:",n),this.currentToken=t,this.currentApiKey=s,this.baiduAppId=i,this.baiduApiKey=s,this.baiduDevPid=n,this.pcmSampleRate=r,this.baiduCuid=a,this.audioQueue=[],this.audioProcessingPromise=Promise.resolve(),this.allowAudioStreaming=!0;const c=this.generateMessageId(),l=`wss://vop.baidu.com/realtime_asr?${new URLSearchParams({sn:c,appid:i,token:t}).toString()}`;if(console.log("🌐 WebSocket URL:",l),this.websocket)try{this.websocket.close()}catch(o){console.warn("⚠️ 关闭旧的WebSocket失败:",o)}this.websocket=new WebSocket(l),this.websocket.binaryType="arraybuffer",this.websocket.onopen=()=>{console.log("✅ WebSocket连接已建立");const e={type:"START",data:{appid:Number(i),appkey:s,token:t,dev_pid:Number(n),cuid:a,format:"pcm",sample:Number(r)}};try{this.websocket.send(JSON.stringify(e)),console.log("📤 已发送百度START帧")}catch(o){console.error("❌ 发送START帧失败:",o)}},this.websocket.onmessage=e=>{this.handleWebSocketMessage(e)},this.websocket.onclose=e=>{console.log("🔌 WebSocket连接已关闭:",e.code,e.reason),this.allowAudioStreaming=!1,this.isRecording&&(console.log("🔄 录音进行中，尝试重连百度WebSocket..."),this.reconnectWebSocket({token:t,appId:i,apiKey:s,devPid:n,sampleRate:r,cuid:a}))},this.websocket.onerror=e=>{console.error("❌ WebSocket连接错误:",e),this.allowAudioStreaming=!1}}catch(t){throw console.error("❌ 启动百度WebSocket识别失败:",t),this.allowAudioStreaming=!1,t}},async reconnectWebSocket(e){try{console.log("🔄 准备在2秒后重连百度WebSocket..."),setTimeout(()=>{this.startBaiduWebSocketRecognition(e)},2e3)}catch(o){console.error("❌ WebSocket重连失败:",o)}},keepWebSocketAlive(){this.websocketKeepAliveTimer&&(clearInterval(this.websocketKeepAliveTimer),this.websocketKeepAliveTimer=null),"baidu"===this.speechProvider?this.websocketKeepAliveTimer=setInterval(()=>{this.websocket&&this.websocket.readyState===WebSocket.OPEN?console.log("💓 WebSocket连接正常"):this.isRecording&&this.currentToken&&this.currentApiKey&&this.baiduAppId&&(console.log("⚠️ WebSocket连接异常，尝试重连..."),this.reconnectWebSocket({token:this.currentToken,appId:this.baiduAppId,apiKey:this.currentApiKey,devPid:this.baiduDevPid,sampleRate:this.pcmSampleRate,cuid:this.baiduCuid||this.generateSessionId()}))},5e3):this.websocketKeepAliveTimer=setInterval(()=>{this.websocket&&this.websocket.readyState===WebSocket.OPEN&&console.log("💓 WebSocket连接正常")},5e3)},stopKeepWebSocketAlive(){this.websocketKeepAliveTimer&&(clearInterval(this.websocketKeepAliveTimer),this.websocketKeepAliveTimer=null,console.log("🛑 停止WebSocket保活"))},sendStopRequest(){if(this.websocket&&this.websocket.readyState===WebSocket.OPEN)try{if("aliyun"===this.speechProvider){const e={header:{message_id:this.generateMessageId(),task_id:this.aliyunTaskId||this.generateMessageId(),namespace:"SpeechTranscriber",name:"StopTranscription",appkey:this.aliyunAppKey||this.currentApiKey},payload:{}};this.websocket.send(JSON.stringify(e)),console.log("🛑 已发送阿里云StopTranscription指令")}else this.websocket.send(JSON.stringify({type:"FINISH"})),console.log("🛑 已发送百度FINISH帧")}catch(e){console.error("❌ 发送FINISH帧失败:",e)}else console.log("⚠️ WebSocket未连接，无法发送停止请求")},scheduleStopRequest(){(async()=>{try{this.audioProcessingPromise&&await this.audioProcessingPromise.catch(e=>{console.error("❌ 等待音频处理完成时出错:",e)}),await this.processAudioQueue()}catch(e){console.error("❌ 停止前处理音频队列失败:",e)}finally{if(this.sendStopRequest(),this.audioQueue=[],this.audioProcessingPromise=Promise.resolve(),this.allowAudioStreaming=!1,this.decodeAudioContext&&"closed"!==this.decodeAudioContext.state)try{this.decodeAudioContext.close()}catch(o){console.warn("⚠️ 关闭AudioContext时出错:",o)}this.decodeAudioContext=null}})()},handleAliyunWebSocketMessage(e){try{if(!e||"string"!=typeof e.data)return;const o=JSON.parse(e.data),t=(null==o?void 0:o.header)||{},i=(null==o?void 0:o.payload)||{},s=t.name;switch(t.task_id&&(this.aliyunTaskId=t.task_id),s){case"TranscriptionStarted":console.log("🚀 阿里云识别已启动");break;case"SentenceBegin":console.log("📝 阿里云检测到句子开始:",null==i?void 0:i.index);break;case"TranscriptionResultChanged":{const e=(null==i?void 0:i.result)||(null==i?void 0:i.text);e&&(console.log("🎯 阿里云中间结果:",e),this.updateContentText(e,!1));break}case"SentenceEnd":{const e=(null==i?void 0:i.result)||(null==i?void 0:i.text);e&&(console.log("✅ 阿里云最终结果:",e),this.updateContentText(e,!0));break}case"TranscriptionCompleted":console.log("🏁 阿里云识别完成"),this.lastPartialText="";break;case"TaskFailed":{const e=(null==t?void 0:t.status_text)||(null==t?void 0:t.status_message)||"识别失败";console.error("❌ 阿里云识别失败:",e);break}default:s&&console.log("ℹ️ 阿里云未处理事件:",s,i)}}catch(o){console.error("❌ 解析阿里云WebSocket消息失败:",o)}},handleWebSocketMessage(e){if("aliyun"!==this.speechProvider)try{const o=JSON.parse(e.data);console.log("📨 收到WebSocket消息:",o);const{type:t,result:i,results:s,err_no:n,err_msg:r}=o;if("HEARTBEAT"===t)return void console.log("💓 收到百度心跳帧");if(void 0!==n&&0!==n)return void console.error("❌ 百度识别返回错误:",n,r);let a="";if(Array.isArray(s)&&s.length>0?a=s.map(e=>{var o;return(null==(o=e[0])?void 0:o.words)||e}).join(""):"string"==typeof i&&(a=i),!a)return void console.log("⚠️ 识别结果为空");"MID_TEXT"===t?(console.log("🎯 百度中间识别结果:",a),this.updateContentText(a,!1)):"FIN_TEXT"===t?(console.log("✅ 百度最终识别结果:",a),this.updateContentText(a,!0)):console.log("ℹ️ 收到未处理的消息类型:",t)}catch(o){console.error("❌ 解析WebSocket消息失败:",o)}else this.handleAliyunWebSocketMessage(e)},updateContentText(e,o=!1){if(!e||!e.trim())return void console.log("⚠️ 空文本，跳过更新");const t=e.trim();let i=this.contentText||"";if(this.lastPartialText){const e=this.lastPartialText.trim();e&&i.endsWith(e)&&(i=i.slice(0,i.length-e.length).trimEnd())}let s=i?i.replace(/\s+$/u,""):"";s?(s+=s.endsWith(" ")?"":" ",s+=t):s=t,this.contentText=s,this.lastPartialText=o?"":t,console.log("📝 文本已更新:",this.contentText),console.log("📝 新增文本:",t,"最终结果:",o),this.$nextTick(()=>{this.$forceUpdate()})},generateMessageId(){let e="";for(let o=0;o<32;o++)e+="0123456789abcdef"[Math.floor(16*Math.random())];return e},generateSessionId:()=>`memoir-${Math.random().toString(36).substring(2,12)}`,async startWebAudioRecording(){try{console.log("🎤 开始Web音频录音...");const e=await navigator.mediaDevices.getUserMedia({audio:{sampleRate:16e3,channelCount:1,echoCancellation:!0,noiseSuppression:!0}});this.mediaStream=e;const o=new(window.AudioContext||window.webkitAudioContext)({sampleRate:16e3}),t=o.createMediaStreamSource(e),i=o.createScriptProcessor(4096,1,1);i.onaudioprocess=e=>{if(this.isRecording&&this.websocket&&this.websocket.readyState===WebSocket.OPEN){const o=e.inputBuffer.getChannelData(0);this.sendAudioData(o)}},t.connect(i),i.connect(o.destination),this.audioProcessor=i,this.audioContext=o,console.log("✅ Web音频录音已开始")}catch(e){throw console.error("❌ Web音频录音失败:",e),e}},sendAudioData(e){try{const o=this.convertToPCM(e);this.websocket&&this.websocket.readyState===WebSocket.OPEN&&this.websocket.send(o)}catch(o){console.error("❌ 发送音频数据失败:",o)}},convertToPCM(e){const o=new ArrayBuffer(2*e.length),t=new DataView(o);for(let i=0;i<e.length;i++){const o=Math.max(-1,Math.min(1,e[i]));t.setInt16(2*i,32767*o,!0)}return o},async startAliyunRealtimeRecognition(){var e;const o=n("token");if(!o)return void console.error("❌ 用户未登录，无法进行实时识别");const t=await r({url:M("/speech/token"),method:"GET",header:{Authorization:`Bearer ${o}`,"Content-Type":"application/json"}});if(200!==t.statusCode||!t.data.success)return void console.error("❌ 获取语音识别Token失败:",null==(e=t.data)?void 0:e.message);const i=t.data.data.token;console.log("✅ 获取语音识别Token成功"),this.realtimeRecognitionTimer=setInterval(()=>{this.performStreamingRecognition(i)},3e3)},async performStreamingRecognition(e){if(this.isRecording)try{if(console.log("🎤 执行流式语音识别..."),this.mediaRecorder&&this.mediaRecorder.src){console.log("📁 使用Cordova录音文件进行流式识别:",this.mediaRecorder.src);const o=this.mediaRecorder.src;if(this.lastRecognizedFile===o)return void console.log("⏭️ 文件已识别过，跳过");await this.callStreamingRecognitionAPI(e,this.mediaRecorder.src),this.lastRecognizedFile=o}else console.log("🎤 等待录音文件生成...")}catch(o){console.error("❌ 流式语音识别失败:",o)}},async performRealtimeRecognition(e){if(this.isRecording)try{if(console.log("🎤 执行实时语音识别..."),this.mediaRecorder&&this.mediaRecorder.src){console.log("📁 使用Cordova录音文件进行识别:",this.mediaRecorder.src);const o=this.mediaRecorder.src;if(this.lastRecognizedFile===o)return void console.log("⏭️ 文件已识别过，跳过");await this.callAliyunRecognitionAPI(e,this.mediaRecorder.src),this.lastRecognizedFile=o}else console.log("🎤 等待录音文件生成...")}catch(o){console.error("❌ 实时语音识别失败:",o)}},async callStreamingRecognitionAPI(e,o){var t;try{console.log("🎯 调用百度流式识别API..."),console.log("📁 文件路径:",o);const e=n("token");console.log("📖 读取音频文件...");const i=await this.readAudioFile(o);if(!i)return void console.error("❌ 无法读取音频文件");const s=h(i),a=await r({url:M("/speech/streaming-recognize"),method:"POST",header:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},data:{audioData:s,format:"wav",sampleRate:16e3,realtime:!0}});if(200===a.statusCode&&a.data.success){const e=a.data.data.transcript;e&&"识别完成但无结果"!==e&&e.length>0&&(console.log("🎯 流式识别结果:",e),this.contentText?this.contentText+=" "+e:this.contentText=e,this.$forceUpdate(),console.log("📝 文本已更新:",this.contentText))}else console.error("❌ 流式识别失败:",null==(t=a.data)?void 0:t.message)}catch(i){console.error("❌ 百度流式识别API调用失败:",i)}},async callAliyunRecognitionAPI(e,o){var t;try{console.log("🎯 调用百度流式识别API..."),console.log("📁 文件路径:",o);const e=n("token");console.log("📖 读取音频文件...");if(!(await this.readAudioFile(o)))return void console.error("❌ 无法读取音频文件");const i=await r({url:M("/speech/transcribe"),method:"POST",header:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},data:{filename:o,realtime:!0,streaming:!0}});if(200===i.statusCode&&i.data.success){const e=i.data.data.transcript;e&&"识别完成但无结果"!==e&&e.length>0&&(console.log("🎯 流式识别结果:",e),this.contentText?this.contentText+=" "+e:this.contentText=e)}else console.error("❌ 流式识别失败:",null==(t=i.data)?void 0:t.message)}catch(i){console.error("❌ 百度流式识别API调用失败:",i)}},async readAudioFile(e){try{if(console.log("📖 尝试读取音频文件:",e),window.Capacitor){if(console.log("📱 使用Capacitor文件系统..."),window.Capacitor.Plugins.Filesystem)try{const o=await window.Capacitor.Plugins.Filesystem.readFile({path:e,directory:"DATA"});console.log("✅ Capacitor文件读取成功，大小:",o.data.length);const t=atob(o.data),i=new Uint8Array(t.length);for(let e=0;e<t.length;e++)i[e]=t.charCodeAt(e);return i.buffer}catch(o){console.log("⚠️ Capacitor Filesystem读取失败，尝试其他方法:",o)}try{console.log("🌐 尝试使用fetch读取文件...");const o=await fetch(e);if(o.ok){const e=await o.arrayBuffer();return console.log("✅ fetch文件读取成功，大小:",e.byteLength),e}}catch(t){console.log("⚠️ fetch读取失败:",t)}console.log("🧪 使用模拟音频数据...");return new ArrayBuffer(1024)}{const o=uni.getFileSystemManager();return new Promise((t,i)=>{o.readFile({filePath:e,success:e=>{console.log("✅ 音频文件读取成功，大小:",e.data.byteLength),t(e.data)},fail:e=>{console.error("❌ 音频文件读取失败:",e),i(e)}})})}}catch(i){return console.error("❌ 读取音频文件异常:",i),null}},processRealtimeAudio(e){if(!e)return void console.warn("⚠️ 未接收到有效的音频数据");if(!this.allowAudioStreaming)return void console.log("🛑 当前不允许发送音频流，忽略数据");const o=this.audioProcessingPromise||Promise.resolve();this.audioProcessingPromise=o.then(async()=>{if(!this.allowAudioStreaming)return void console.log("🛑 音频流已停止，跳过处理");console.log("处理实时音频数据:",e.size||e.byteLength||0,"bytes"),console.log("🔍 音频数据类型:",e.constructor?e.constructor.name:typeof e),console.log("🔍 WebSocket状态:",this.websocket?this.websocket.readyState:"null");const o=await this.preparePcmBuffer(e);if(o&&o.byteLength)if(this.allowAudioStreaming)if(this.websocket&&this.websocket.readyState===WebSocket.OPEN)try{this.websocket.send(o),console.log("✅ 音频数据发送成功 (PCM格式)，大小:",o.byteLength,"bytes")}catch(t){console.error("❌ 发送音频数据失败:",t),this.allowAudioStreaming&&this.audioQueue.push(o)}else this.allowAudioStreaming&&(console.log("📦 WebSocket未就绪，将PCM音频数据加入队列:",o.byteLength,"bytes"),this.audioQueue.push(o),this.websocket&&this.websocket.readyState!==WebSocket.CLOSED||(this.isRecording||this.isProcessing)&&this.currentToken&&this.currentApiKey&&this.baiduAppId&&(console.log("🔄 尝试重连WebSocket..."),this.reconnectWebSocket({token:this.currentToken,appId:this.baiduAppId,apiKey:this.currentApiKey,devPid:this.baiduDevPid,sampleRate:this.pcmSampleRate,cuid:this.baiduCuid||this.generateSessionId()})));else console.log("🛑 音频流已停止，在发送前终止");else console.warn("⚠️ PCM转换失败或为空，跳过当前音频块")}).catch(e=>{console.error("❌ 处理音频数据失败:",e)})},async preparePcmBuffer(e){try{return e?e instanceof ArrayBuffer?e:ArrayBuffer.isView(e)?e.buffer:e instanceof Blob?await this.convertWebMToPCM(e):"function"==typeof e.arrayBuffer?await e.arrayBuffer():(console.warn("⚠️ 不支持的音频数据类型，无法转换为PCM"),null):null}catch(o){return console.error("❌ 准备PCM音频数据失败:",o),null}},async processAudioQueue(){if(!this.allowAudioStreaming)return this.audioQueue.length&&console.log("🧹 音频流已关闭，清空待发送队列"),void(this.audioQueue=[]);if(0!==this.audioQueue.length){for(console.log("📦 处理音频队列，队列长度:",this.audioQueue.length);this.audioQueue.length>0&&this.websocket&&this.websocket.readyState===WebSocket.OPEN;){const o=this.audioQueue.shift(),t=o instanceof ArrayBuffer?o:null==o?void 0:o.buffer;if(t&&t.byteLength)try{this.websocket.send(t),console.log("✅ 发送队列中的音频数据:",t.byteLength,"bytes (PCM格式)")}catch(e){console.error("❌ 发送队列音频数据失败:",e),this.audioQueue.unshift(t);break}else console.warn("⚠️ 队列中的音频数据无效，已跳过")}console.log("📦 音频队列处理完成，剩余:",this.audioQueue.length)}else console.log("📦 音频队列为空")},async convertWebMToPCM(e){try{console.log("🔄 开始转换WebM到PCM格式...");const o=window.AudioContext||window.webkitAudioContext;if(!o)throw new Error("AudioContext 不可用");this.decodeAudioContext&&"closed"!==this.decodeAudioContext.state||(this.decodeAudioContext=new o);const t=await e.arrayBuffer(),i=await new Promise((e,o)=>{this.decodeAudioContext.decodeAudioData(t.slice(0),e,o)}),s=await this.resampleAudioData(i,this.pcmSampleRate);if(!s||!s.length)throw new Error("重采样结果为空");const n=this.float32ToPCM(s);return console.log("✅ WebM到PCM转换完成，字节数:",n.byteLength),n}catch(o){return console.error("❌ WebM到PCM转换失败:",o),null}},async resampleAudioData(e,o){if(!e)return null;if(e.sampleRate===o)return e.getChannelData(0);const t=window.OfflineAudioContext||window.webkitOfflineAudioContext;if(t)try{const i=new t(1,Math.ceil(e.duration*o),o),s=i.createBufferSource();s.buffer=e,s.connect(i.destination),s.start(0);return(await i.startRendering()).getChannelData(0)}catch(s){console.warn("⚠️ OfflineAudioContext 重采样失败，使用降级算法:",s)}const i=e.getChannelData(0);return this.downsampleBuffer(i,e.sampleRate,o)},downsampleBuffer(e,o,t){if(!e||o===t)return e;const i=o/t,s=Math.round(e.length/i),n=new Float32Array(s);for(let r=0;r<s;r++){const o=Math.floor(r*i);n[r]=e[o]}return n},float32ToPCM(e){if(!e)return new ArrayBuffer(0);const o=new ArrayBuffer(2*e.length),t=new DataView(o);for(let i=0;i<e.length;i++){let o=Math.max(-1,Math.min(1,e[i]));t.setInt16(2*i,o<0?32768*o:32767*o,!0)}return o},handleRecordingFallback(){console.log("🔄 录音API不可用，使用降级处理"),this.isRecording=!1,this.isProcessing=!1,this.allowAudioStreaming=!1,this.recordingTimer&&(clearInterval(this.recordingTimer),this.recordingTimer=null),o({title:"当前环境不支持录音",icon:"error"})},stopRecording(e){if(!this.isRecording)return;e&&(e.preventDefault(),e.stopPropagation()),console.log("🛑 停止录音...");const o=this.isRecording;if(this.isRecording=!1,this.isProcessing=!0,this.lastPartialText="",this.recordingTimer&&(clearInterval(this.recordingTimer),this.recordingTimer=null),this.scheduleStopRequest(),this.stopKeepWebSocketAlive(),this.realtimeRecognitionTimer&&(clearInterval(this.realtimeRecognitionTimer),this.realtimeRecognitionTimer=null),this.stopStatusMonitoring(),window.Capacitor&&window.Capacitor.Plugins&&window.Capacitor.Plugins.AliyunSpeech){console.log("🎤 停止百度插件录音...");try{window.Capacitor.Plugins.AliyunSpeech.stopRecording(),window.Capacitor.Plugins.AliyunSpeech.removeAllListeners(),console.log("✅ 百度插件录音已停止")}catch(t){console.error("❌ 停止百度插件录音失败:",t)}}this.speechRecognition&&(this.speechRecognition.stop(),this.speechRecognition=null),this.websocket&&(this.websocket.close(),this.websocket=null,console.log("🔌 WebSocket连接已关闭")),this.audioProcessor&&(this.audioProcessor.disconnect(),this.audioProcessor=null,console.log("🎵 音频处理器已停止")),this.audioContext&&(this.audioContext.close(),this.audioContext=null,console.log("🎵 音频上下文已关闭")),this.mediaStream?(console.log("🌐 停止Web录音..."),this.stopWebRecording()):this.mediaRecorder&&"function"==typeof this.mediaRecorder.stopRecord?(console.log("🎤 停止Cordova录音..."),this.stopCordovaRecording()):"undefined"!=typeof uni&&"function"==typeof uni.stopRecord?(console.log("📱 停止App录音..."),uni.stopRecord({success:e=>{console.log("✅ App录音停止成功，文件路径:",e.tempFilePath),this.handleRecordingSuccess(e.tempFilePath)},fail:e=>{console.error("❌ App录音停止失败:",e),this.handleRecordingError("录音停止失败")}})):o?(console.log("🎭 停止模拟录音模式..."),this.stopSimulatedRecording()):(console.log("⚠️ 当前环境不支持录音API"),this.handleRecordingError("录音API不可用")),this.$nextTick(()=>{this.$forceUpdate()})},stopWebRecording(){var e;try{console.log("🌐 停止Web录音..."),console.log("MediaRecorder状态:",null==(e=this.mediaRecorder)?void 0:e.state),this.mediaRecorder&&("recording"===this.mediaRecorder.state?(console.log("停止MediaRecorder..."),this.mediaRecorder.stop()):"paused"===this.mediaRecorder.state&&(this.mediaRecorder.resume(),this.mediaRecorder.stop())),this.mediaStream&&(console.log("停止媒体流..."),this.mediaStream.getTracks().forEach(e=>{console.log("停止轨道:",e.kind),e.stop()}),this.mediaStream=null),this.mediaRecorder=null,this.allowAudioStreaming=!1}catch(o){console.error("❌ 停止Web录音失败:",o),this.handleRecordingError("停止录音失败")}},stopCordovaRecording(){try{if(console.log("🎤 停止Cordova录音..."),this.mediaRecorder){this.mediaRecorder.stopRecord(),console.log("✅ Cordova录音已停止");const e=this.mediaRecorder.src;console.log("📁 录音文件路径:",e),this.handleRecordingSuccess(e),this.mediaRecorder.release(),this.mediaRecorder=null}this.allowAudioStreaming=!1}catch(e){console.error("❌ 停止Cordova录音失败:",e),this.handleRecordingError("停止录音失败")}},stopSimulatedRecording(){try{console.log("🎭 停止模拟录音模式..."),this.recordingTimer&&(clearInterval(this.recordingTimer),this.recordingTimer=null),this.stopStatusMonitoring(),this.isRecording=!1,this.isProcessing=!1,this.allowAudioStreaming=!1,o({title:"录音完成",icon:"success"}),console.log("✅ 模拟录音模式停止成功"),console.log("📊 录音状态检查 - isRecording:",this.isRecording),console.log("📊 按钮文字检查 - recordButtonText:",this.recordButtonText)}catch(e){console.error("❌ 停止模拟录音模式失败:",e),this.isRecording=!1,this.isProcessing=!1,o({title:"录音停止",icon:"none"})}},async processWebAudio(e){try{console.log("🎵 处理Web录音数据...",e.size,"bytes"),console.log("🎵 音频Blob类型:",e.type);let o=".webm",t=e.type||"audio/webm";t.includes("webm")?o=".webm":t.includes("mp4")?o=".mp4":t.includes("wav")?o=".wav":t.includes("ogg")&&(o=".ogg");const i=`web_recording_${Date.now()}${o}`,s=new File([e],i,{type:t});console.log("📁 创建音频文件:",{name:s.name,size:s.size,type:s.type}),await this.uploadWebAudio(s)}catch(o){console.error("❌ 处理Web音频失败:",o),this.handleRecordingError("音频处理失败")}},async uploadWebAudio(e){try{console.log("📤 上传Web录音文件...");const t=n("token");if(!t)throw new Error("用户未登录");const i=new FormData;i.append("audio",e);const s=await fetch(M("/speech/upload"),{method:"POST",headers:{Authorization:`Bearer ${t}`},body:i}),r=await s.json();if(!s.ok||!r.success)throw new Error(r.message||"上传失败");{console.log("✅ Web音频上传成功:",r.data);const e={id:Date.now(),duration:this.recordingTime,filePath:r.data.file.filename,transcription:"",playing:!1,isWebAudio:!0};this.recordings.push(e),this.isProcessing=!1,this.recordingTime=0,o({title:"录制完成",icon:"success"})}}catch(t){console.error("❌ Web音频上传失败:",t),this.handleRecordingError(`上传失败: ${t.message}`)}},handleRecordingSuccess(e){console.log("📁 处理录音文件:",e);const t={id:Date.now(),duration:this.recordingTime,filePath:e,transcription:"",playing:!1};this.recordings.push(t),this.isProcessing=!1,this.recordingTime=0,o({title:"录制完成",icon:"success"})},handleRecordingError(e){console.error("❌ 录音处理失败:",e),this.isRecording=!1,this.isProcessing=!1,this.recordingTime=0,o({title:e||"录音失败",icon:"error"})},playRecording(e){e.playing=!e.playing,e.playing?(o({title:"开始播放",icon:"none"}),setTimeout(()=>{e.playing=!1},1e3*e.duration)):o({title:"停止播放",icon:"none"})},async transcribeRecording(e){var t;try{d({title:"语音转文字中..."});const s=n("token");if(!s)throw new Error("用户未登录");console.log("正在获取百度语音识别Token...");const a=await r({url:M("/speech/token"),method:"GET",header:{Authorization:`Bearer ${s}`,"Content-Type":"application/json"}});if(console.log("Token响应:",a),B(a))return;if(200!==a.statusCode||!a.data.success)throw new Error((null==(t=a.data)?void 0:t.message)||"获取语音识别Token失败");const l=a.data.data.token;if(console.log("成功获取百度Token:",l.substring(0,20)+"..."),!e||!e.filePath)throw new Error("没有找到录音文件");console.log("📁 开始处理录音文件:",e.filePath);try{if(e.isWebAudio)console.log("🌐 Web录音文件，直接调用转写API..."),await this.callTranscribeAPI(e,l,e.filePath);else{console.log("📤 准备上传音频文件进行百度识别...");const o=await this.uploadAudioFile(e.filePath,s);console.log("✅ 音频文件上传成功:",o),await this.callTranscribeAPI(e,l,o.file.filename)}}catch(i){console.error("❌ 音频处理失败:",i),c(),o({title:"语音识别失败: "+(i.message||"未知错误"),icon:"error",duration:3e3})}}catch(i){c(),console.error("❌ 语音转文字失败:",i);const e=i.message||"语音转文字失败";o({title:e,icon:"error",duration:3e3})}},async uploadAudioFile(e,o){try{console.log("准备上传音频文件:",e);const t=await l({url:M("/speech/upload"),filePath:e,name:"audio",header:{Authorization:`Bearer ${o}`}});if(console.log("音频上传响应:",t),200===t.statusCode){const e=JSON.parse(t.data);if(e.success)return console.log("✅ 音频文件上传成功:",e.data),e.data;throw new Error(e.message||"音频上传失败")}throw new Error(`上传失败，状态码: ${t.statusCode}`)}catch(t){throw console.error("❌ 音频文件上传失败:",t),t}},async performRealSpeechRecognition(e,t,i){var s;try{console.log("🎯 开始真实语音识别处理..."),console.log("📁 音频文件:",i.file.filename),console.log("🔑 Token:",t.substring(0,20)+"...");const a=n("token"),l=await r({url:M("/speech/transcribe"),method:"POST",header:{Authorization:`Bearer ${a}`,"Content-Type":"application/json"},data:{filename:i.file.filename}});if(console.log("转写响应:",l),200!==l.statusCode||!l.data.success)throw new Error((null==(s=l.data)?void 0:s.message)||"语音识别请求失败");{const t=l.data.data.transcript;e.transcription=t,this.contentText?this.contentText+="\n\n"+t:this.contentText=t,c(),o({title:"语音转文字完成",icon:"success"}),console.log("✅ 百度语音识别完成！"),console.log("📄 转录文本:",t),console.log("⏰ 转写时间:",l.data.data.transcribedAt)}}catch(a){throw console.error("❌ 真实语音识别失败:",a),a}},async callTranscribeAPI(e,t,i){var s,a;try{console.log("🎯 开始百度语音识别..."),console.log("📁 音频文件:",i),console.log("🔑 Token:",t.substring(0,20)+"...");const l=n("token"),d=await r({url:M("/speech/transcribe"),method:"POST",header:{Authorization:`Bearer ${l}`,"Content-Type":"application/json"},data:{filename:i,testMode:!1}});if(console.log("转写响应:",d),200!==d.statusCode||!d.data.success){const e=(null==(s=d.data)?void 0:s.message)||(null==(a=d.data)?void 0:a.details)||"语音识别请求失败";throw console.error("❌ 转写API响应错误:",d),new Error(e)}{const t=d.data.data.transcript;e.transcription=t,this.contentText?this.contentText+="\n\n"+t:this.contentText=t,c(),o({title:"语音转文字完成",icon:"success"}),console.log("✅ 百度语音识别完成！"),console.log("📄 转录文本:",t),console.log("⏰ 转写时间:",d.data.data.transcribedAt)}}catch(l){throw console.error("❌ 百度语音识别失败:",l),l}},async fallbackSpeechRecognition(e,t){try{console.log("🎯 执行降级语音识别...");const t=["我出生在一个小城市，那里有着宁静的街道和温暖的邻里关系。","童年时最难忘的是和小伙伴们在院子里玩耍的美好时光。","那时候的生活虽然简单，但充满了纯真的快乐和无忧无虑。","家里的老房子虽然不大，但承载着我们一家人温馨的回忆。","父母亲都是勤劳朴实的人，他们用自己的方式为我们撑起了一个温暖的家。"];await new Promise(e=>setTimeout(e,1e3));const i=t[Math.floor(Math.random()*t.length)];e.transcription=i,this.contentText?this.contentText+="\n\n"+i:this.contentText=i,c(),o({title:"语音转文字完成（降级模式）",icon:"success"}),console.log("✅ 降级语音识别完成！"),console.log("📄 转录文本:",i)}catch(i){throw console.error("❌ 降级语音识别失败:",i),i}},deleteRecording(e){a({title:"确认删除",content:"确定要删除这段录音吗？",success:t=>{t.confirm&&(this.recordings.splice(e,1),o({title:"删除成功",icon:"success"}))}})},formatTime(e){const o=e%60;return`${Math.floor(e/60).toString().padStart(2,"0")}:${o.toString().padStart(2,"0")}`},async aiCompleteText(){var e;if(this.contentText&&0!==this.contentText.trim().length){if(!this.isAiCompleting){this.isAiCompleting=!0,this.originalText=this.contentText;try{console.log("🤖 开始AI补全文本...");const t=n("token");if(!t)throw new Error("用户未登录");const i=await r({url:M("/ai/complete-text"),method:"POST",header:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},data:{text:this.contentText,chapterId:this.chapterId,chapterTitle:this.chapterTitle}});if(200!==i.statusCode||!i.data.success)throw new Error((null==(e=i.data)?void 0:e.message)||"AI补全失败");this.aiCompletedText=i.data.data.completedText,this.showAiDiff=!0,console.log("✅ AI补全完成"),o({title:"AI补全完成",icon:"success"})}catch(t){console.error("❌ AI补全失败:",t),o({title:"AI补全失败: "+(t.message||"未知错误"),icon:"error",duration:3e3})}finally{this.isAiCompleting=!1}}}else o({title:"请先输入一些内容",icon:"none"})},acceptAiCompletion(){this.contentText=this.aiCompletedText,this.showAiDiff=!1,this.originalText="",this.aiCompletedText="",o({title:"已接受AI补全",icon:"success"})},rejectAiCompletion(){this.showAiDiff=!1,this.originalText="",this.aiCompletedText="",o({title:"已拒绝AI补全",icon:"none"})}}},[["render",function(e,o,t,n,r,a){const c=R,l=w,d=C,h=x;return f(),i(l,{class:"container"},{default:s(()=>[b(l,{class:"nav-header"},{default:s(()=>[b(l,{class:"back-btn",onClick:a.goBack},{default:s(()=>[b(c,{class:"back-icon"},{default:s(()=>[y("←")]),_:1})]),_:1},8,["onClick"]),b(l,{class:"nav-title"},{default:s(()=>[y(k(r.chapterTitle),1)]),_:1}),b(l,{class:"save-btn",onClick:a.saveChapter},{default:s(()=>[b(c,{class:"save-text"},{default:s(()=>[y("保存")]),_:1})]),_:1},8,["onClick"])]),_:1}),b(l,{class:"content"},{default:s(()=>[b(l,{class:"prompts-section"},{default:s(()=>[b(l,{class:"prompts-card"},{default:s(()=>[b(l,{class:"prompts-title"},{default:s(()=>[y("引导问题")]),_:1}),b(l,{class:"prompts-list"},{default:s(()=>[(f(!0),S(T,null,v(r.prompts,(e,o)=>(f(),i(l,{key:o,class:"prompt-item"},{default:s(()=>[b(l,{class:"prompt-number"},{default:s(()=>[y(k(o+1),1)]),_:2},1024),b(c,{class:"prompt-text"},{default:s(()=>[y(k(e),1)]),_:2},1024)]),_:2},1024))),128))]),_:1})]),_:1})]),_:1}),b(l,{class:"recording-section"},{default:s(()=>[b(l,{class:"recording-card"},{default:s(()=>[b(l,{class:"date-display"},{default:s(()=>[b(c,{class:"date-text"},{default:s(()=>[y(k(a.currentDate),1)]),_:1})]),_:1}),b(l,{class:"text-input-area"},{default:s(()=>[b(d,{class:"text-input",placeholder:"开始记录您的回忆...",value:r.contentText,onInput:a.onTextInput,"auto-height":"",maxlength:"5000"},null,8,["value","onInput"])]),_:1}),b(l,{class:"voice-control-area"},{default:s(()=>[b(l,{class:"control-buttons"},{default:s(()=>[b(l,{class:"record-btn-container"},{default:s(()=>[b(l,{class:P(["record-btn",{recording:r.isRecording,processing:r.isProcessing}]),onClick:a.toggleRecording},{default:s(()=>[b(l,{class:"record-icon"},{default:s(()=>[r.isRecording?(f(),i(l,{key:0,class:"recording-animation"},{default:s(()=>[(f(),S(T,null,v(3,e=>b(l,{class:"wave",key:e})),64))]),_:1})):(f(),i(h,{key:1,src:W,class:"mic-icon",mode:"aspectFit"}))]),_:1})]),_:1},8,["class","onClick"]),b(c,{class:"record-text"},{default:s(()=>[y(k(a.recordButtonText),1)]),_:1})]),_:1}),b(l,{class:"ai-complete-btn-container"},{default:s(()=>[b(l,{class:P(["ai-complete-btn",{processing:r.isAiCompleting}]),onClick:a.aiCompleteText},{default:s(()=>[b(l,{class:"ai-icon"},{default:s(()=>[r.isAiCompleting?(f(),i(l,{key:1,class:"ai-loading"},{default:s(()=>[(f(),S(T,null,v(3,e=>b(l,{class:"loading-dot",key:e})),64))]),_:1})):(f(),i(h,{key:0,src:I,class:"ai-icon-img",mode:"aspectFit"}))]),_:1})]),_:1},8,["class","onClick"]),b(c,{class:"ai-complete-text"},{default:s(()=>[y("AI补全")]),_:1})]),_:1})]),_:1})]),_:1}),r.isRecording?(f(),i(l,{key:0,class:"recording-timer"},{default:s(()=>[b(c,{class:"timer-text"},{default:s(()=>[y(k(a.formatTime(r.recordingTime)),1)]),_:1})]),_:1})):A("",!0),r.showAiDiff?(f(),i(l,{key:1,class:"ai-diff-container"},{default:s(()=>[b(l,{class:"diff-header"},{default:s(()=>[b(c,{class:"diff-title"},{default:s(()=>[y("AI补全结果")]),_:1}),b(c,{class:"diff-subtitle"},{default:s(()=>[y("请选择是否接受AI的修改")]),_:1})]),_:1}),b(l,{class:"diff-content"},{default:s(()=>[b(l,{class:"diff-ai"},{default:s(()=>[b(l,{class:"diff-label"},{default:s(()=>[y("AI补全结果")]),_:1}),b(l,{class:"diff-text ai-text"},{default:s(()=>[y(k(r.aiCompletedText),1)]),_:1})]),_:1})]),_:1}),b(l,{class:"diff-actions"},{default:s(()=>[b(l,{class:"diff-btn reject-btn",onClick:a.rejectAiCompletion},{default:s(()=>[b(h,{src:_,class:"btn-icon",mode:"aspectFit"})]),_:1},8,["onClick"]),b(l,{class:"diff-btn accept-btn",onClick:a.acceptAiCompletion},{default:s(()=>[b(h,{src:E,class:"btn-icon",mode:"aspectFit"})]),_:1},8,["onClick"])]),_:1})]),_:1})):A("",!0)]),_:1})]),_:1})]),_:1})]),_:1})}],["__scopeId","data-v-bbf7b085"]]);export{N as default};
